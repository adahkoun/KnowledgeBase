SQL vs NoSql :
  - SQL databases use tables and NoSQL ones use collection
  - In SQL databases we store rows and in NoSQL ones we store documents
  - If we add a column in a SQL databases the whole table will be affected, but in NoSQL only the concerned document is affected.
  - in NoSQL databases documents are generally files with format such as json
  - in NoSQL databases the records are named documents or pages 

MySql/mariadb database Basics :
  sudo yum install https://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm   : to install repo for mysql
  sudo yum install mysql-community-server                                                 : install mysql server
  sudo yum install mariadb-server                                                         : install mariadb
  service mysqld start                                                                    : starts mysql service (3306 is the default port)
  cat /var/log/mysqld.log                                                                 : the log file of mysql (note that the temporary root password of mysql can be found in this log)
                                                                                            sudo grep 'temporary password' /var/log/mysqld.log : get temporary password
                                                                                            for mariadb the default root password is : P@ssw0rd123
  /var/lib/mysql                                                                          : default mysql data folder
  mysql -u root -p<temp_pass>                                                             : connect with the mysql root user (no space after -p)
  MySql command line (; after mysql commands):
    alter user 'root'@'localhost' identified by '<your_new_pass>'           : we execute this first before doing any operation to setup our new password for mysql root user
                                                                              we can also use an included shell script named 'mysql_secure_installation'
                                                                              No other operation is authorized unless we define our password
    show databases                                                          : list all available databases
    create database my_db                                                   : create a new database
    use my_db                                                               : use a database
    show tables                                                             : show all tables of the current database
    create user 'john'@'localhost' identified by '<your_pass>'              : create a new user that can access only from localhost
    create user 'john'@'<host_ip_address>' identified by '<your_pass>'      : create a new user that can access only from another host
    create user 'john'@'%' identified by '<your_pass>'                      : create a new user that can access only from all hosts
    grant <permission> on <db>.<table> to 'john'@'%'                        : we use grant to give certain privileges to a user
                                                                              List of privileges :
                                                                                ALL PRIVILEGES
                                                                                CREATE
                                                                                DROP 
                                                                                DELETE
                                                                                INSERT
                                                                                SELECT
                                                                                UPDATE
    grant select, update on my_db.my_table to 'john'@'%'                    : here we grant multiple privileges
    grant select, update on my_db.* to 'john'@'%'                           : here we grant multiple privileges on all tables of my_db database
    grant all privileges on *.* to 'john'@'%'                               : here we grant all privileges on all databases and tables (this is not recommended)
    show all grants for 'john'@'%'                                          : show the list of all granted privileges to the user john
    
MongoDB basics :
  sudo yum install -y mongodb-org         : install mongodb (before doing this we need to add mongodb repo file in /etc/yum.repos.d)
  systemctl start mongod                  : starts mongodb service
  cat /var/log/mongodb/mongod.log         : mongodb log file (27017 is the default port)
  cat /etc/mongod.conf                    : mongodb config file 
  mongod --version                        : get the mongodb version
  mongo                                   : to open mongodb command line
  mongodb command line :
    show dbs                              : to list the available databases
    use my_db                             : to use a database
    db                                    : to print the current database
    db.createCollection("persons")        : create a collection named persons
    show collections                      : to list all collections in the current database
    db.persons.insert({                   : to insert a document into the collection persons
      "name": "My name",
      "Age": 45,
      "location": "my home",
      "salary": 10000
      })
    db.persons.find()                     : to get all documents from the collection persons (every document have its own id that we can get from the "_id" tag)
    db.persons.find({"name": "My name"})  : to get all documents respecting the given criteria
    
  
  
  
    
    
    
    
  
